# -*- coding: utf-8 -*-
"""AnswerRetrival_BERT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17TKNxSfkVB_b_1gODGWBmjgFgdiptobb
"""

import os
os.environ["WANDB_DISABLED"] = "true"  # Disable wandb logging

from sentence_transformers import SentenceTransformer, InputExample, losses, models
from torch.utils.data import DataLoader
import json

# Load training samples
train_samples = []
with open("sbert_models/fine_tune_sbert_batch11.jsonl", "r", encoding="utf-8") as f:
    for line in f:
        item = json.loads(line)
        train_samples.append(InputExample(texts=item["texts"], label=float(item["label"])))

# DataLoader
train_dataloader = DataLoader(train_samples, shuffle=True, batch_size=32)

# Load model from saved folder
word_embedding_model = models.Transformer("sbert_models")
pooling_model = models.Pooling(word_embedding_model.get_word_embedding_dimension())
model = SentenceTransformer(modules=[word_embedding_model, pooling_model])

# Define loss
train_loss = losses.CosineSimilarityLoss(model=model)

# Train and save model
output_path = "fine_tuned_models/sbert_finetuned_small"
model.fit(
    train_objectives=[(train_dataloader, train_loss)],
    epochs=3,
    warmup_steps=100,
    output_path=output_path,
    show_progress_bar=True
)

print(f" Fine-tuned model saved to: {output_path}")